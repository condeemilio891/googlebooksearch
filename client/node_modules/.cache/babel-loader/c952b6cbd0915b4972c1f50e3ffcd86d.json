{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\18066\\\\Desktop\\\\VSC\\\\googlebooksearch\\\\googlelibrary\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"./components/MyJumbotron/jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResults from \"./components/SearchResults\"; // import Nav from \"./components/Nav\";\n// import Input from \"./components/Input\";\n// import Button from \"react-bootstrap/Button\"\n\nimport API from \"./utils/API\";\n\nclass SearchBooks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBooks(this.state.search).then(res => {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          let results = res.data.items; //map through the array \n\n          results = results.map(result => {\n            //store each book information in a new object \n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          }); // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n\n          this.setState({\n            books: results,\n            error: \"\"\n          });\n        }\n      }).catch(err => this.setState({\n        error: err.items\n      }));\n    };\n\n    this.handleSavedButton = event => {\n      // console.log(event)\n      event.preventDefault();\n      console.log(this.state.books);\n      let savedBooks = this.state.books.filter(book => book.id === event.target.id);\n      savedBooks = savedBooks[0];\n      API.saveBook(savedBooks).then(this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white\",\n          children: \"Find Your Favorite Books with GoogleBook API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            size: \"12\",\n            children: /*#__PURE__*/_jsxDEV(SearchForm, {\n              handleFormSubmit: this.handleFormSubmit,\n              handleInputChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(SearchResults, {\n          books: this.state.books,\n          handleSavedButton: this.handleSavedButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBooks;","map":{"version":3,"sources":["C:/Users/18066/Desktop/VSC/googlebooksearch/googlelibrary/client/src/App.js"],"names":["React","Component","Jumbotron","Container","Row","Col","SearchForm","SearchResults","API","SearchBooks","state","search","books","error","message","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","data","items","Error","results","map","result","key","id","title","volumeInfo","author","authors","description","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","console","log","savedBooks","filter","book","saveBook","alert","render"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport Jumbotron from \"./components/MyJumbotron/jumbotron\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport SearchForm from \"./components/SearchForm\"\r\nimport SearchResults from \"./components/SearchResults\"\r\n// import Nav from \"./components/Nav\";\r\n// import Input from \"./components/Input\";\r\n// import Button from \"react-bootstrap/Button\"\r\nimport API from \"./utils/API\";\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    //create state\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response in a array\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result.id,\r\n                            id: result.id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSavedButton = event => {\r\n        // console.log(event)\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Jumbotron>\r\n                    <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <SearchResults books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchBooks\r\n\r\n"]},"metadata":{},"sourceType":"module"}